/*
Васин жесткий диск состоит из M секторов. 
Вася последовательно устанавливал на него различные операционные системы следующим методом: 
он создавал новый раздел диска из последовательных секторов, 
начиная с сектора номер ai и до сектора bi включительно, и устанавливал на него очередную систему. 
При этом, если очередной раздел хотя бы по одному сектору пересекается с каким-то 
ранее созданным разделом, то ранее созданный раздел «затирается», и операционная система, 
которая на него была установлена, больше не может быть загружена.

Напишите программу, которая по информации о том, какие разделы на диске создавал Вася,
 определит, сколько в итоге работоспособных операционных систем установлено и 
 работает в настоящий момент на Васином компьютере.

Формат ввода
Сначала вводятся натуральное число M — количество секторов на жестком диске (1 ≤ M ≤ 109) и 
целое число N — количество разделов, которое последовательно создавал Вася (0 ≤ N ≤ 1000).

Далее идут N пар чисел ai и bi, задающих номера начального и конечного секторов раздела (1 ≤ ai ≤ bi ≤ M).

Формат вывода
Выведите одно число — количество работающих операционных систем на Васином компьютере.

Пример 1
Ввод	Вывод
10      1
3
1 3
4 7
3 4

Пример 2
Ввод	Вывод
10      3
4
1 3
4 5
7 8
4 6

*/


using System;
using System.Collections.Generic;
using System.Linq;
public class Test
{
    static void Main()
    {
        string arrSectors = Console.ReadLine()!;
        int m = Convert.ToInt32(arrSectors); // кол-во секторов
        string arrChapt = Console.ReadLine()!;
        int n = Convert.ToInt32(arrChapt); // кол-во разделов
        if (n == 0) Console.WriteLine("0");
        else
        {
            int[] arr = new int[2 * n];

            for (int i = 1; i <= 2 * n; i = i + 2)
            {
                string[] arrStr = Console.ReadLine()!.Split(' ');
                arr[i - 1] = Convert.ToInt32(arrStr[0]);
                arr[i] = Convert.ToInt32(arrStr[1]);
            }

            int count = n;

            if (n >= 2)
            {
                for (int c = 2; c < 2 * n; c = c + 2)
                {
                    if (arr[c] != 0)
                    {
                        int start = arr[c];
                        int finish = arr[c + 1];
                        for (int j = 0; j < c; j = j + 2)
                        {
                            if ((arr[j] >= start & arr[j] <= finish) || (arr[j + 1] >= start & arr[j + 1] <= finish) || (arr[j] <= start & arr[j + 1] >= finish))
                            {
                                count--;
                                arr[j] = 0;
                                arr[j + 1] = 0;
                            }
                        }
                    }
                }
            }
                Console.WriteLine(count);
                System.Console.WriteLine(string.Join(", ", arr));           
        }
    }
}