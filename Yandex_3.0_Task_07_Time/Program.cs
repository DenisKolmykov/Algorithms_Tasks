/*
Для того чтобы компьютеры поддерживали актуальное время, 
они могут обращаться к серверам точного времени SNTP (Simple Network Time Protocol). 
К сожалению, компьютер не может просто получить время у сервера, 
потому что информация по сети передаётся не мгновенно: 
пока сообщение с текущим временем дойдёт до компьютера, оно потеряет свою актуальность. 
Протокол взаимодействия клиента (компьютера, запрашивающего точное время) и 
сервера (компьютера, выдающего точное время) выглядит следующим образом:
1. Клиент отправляет запрос на сервер и запоминает время отправления A (по клиентскому времени).
2. Сервер получает запрос в момент времени B (по точному серверному времени) и 
отправляет клиенту сообщение, содержащее время B.
3. Клиент получает ответ на свой запрос в момент времени C (по клиентскому времени) и запоминает его. 
Теперь клиент, из предположения, что сетевые задержки при передаче сообщений от клиента серверу и 
от сервера клиенту одинаковы, может определить и установить себе точное время, 
используя известные значения A, B, C.

Вам предстоит реализовать алгоритм, с точностью до секунды определяющий точное время 
для установки на клиенте по известным A, B и C. 
При необходимости округлите результат до целого числа секунд по правилам арифметики 
(в меньшую сторону, если дробная часть числа меньше 1/2, иначе в большую сторону).
Возможно, что, пока клиент ожидал ответа, по клиентскому времени успели наступить новые сутки, 
однако известно, что между отправкой клиентом запроса и получением ответа от сервера прошло менее 24 часов.

Формат ввода
Программа получает на вход три временные метки A, B, C, по одной в каждой строке. 
Все временные метки представлены в формате «hh:mm:ss», 
где «hh» – это часы, «mm» – минуты, «ss» – секунды. 
Часы, минуты и секунды записываются ровно двумя цифрами каждое 
(возможно, с дополнительными нулями в начале числа).

Формат вывода
Программа должна вывести одну временную метку в формате, описанном во входных данных, 
– вычисленное точное время для установки на клиенте. 
В выводе не должно быть пробелов, пустых строк в начале вывода.

Ввод	    Вывод
15:01:00    18:10:05
18:09:45
15:01:40

*/

//string a = "20:01:00";
// string b = "18:09:00";
// string c = "00:01:01";

using System;
using System.Collections.Generic;
using System.Linq;

public class Test
{

    static void Main()
    {
        //string[] array = Console.ReadLine()!.Split(' ');
        string a = Console.ReadLine()!;
        string b = Console.ReadLine()!;
        string c = Console.ReadLine()!;

        int GetTime(string x)
        {
            string[] xx = x.Split(":");
            int secX = int.Parse(xx[0]) * 3600 + int.Parse(xx[1]) * 60 + int.Parse(xx[2]);
            return secX;
        }

        int secA = GetTime(a);
        int secB = GetTime(b);
        int secC = GetTime(c);

        if (secC <= secA ) secC = secC + 24 * 3600;

        int timeDelay = Convert.ToInt32(Math.Round((((double)secC - (double)secA) / 2), 0, MidpointRounding.AwayFromZero));

        int timeCorrect = (secB + timeDelay);

        int ss = (timeCorrect % 3600) % 60;
        int mm = ((timeCorrect - ss) % 3600) / 60;
        int hh = (timeCorrect - mm * 60 - ss) / 3600;
        if (hh >= 24) hh = hh - 24;
        Console.WriteLine($"{hh:00}:{mm:00}:{ss:00}");
    }
}